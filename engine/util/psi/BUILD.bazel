# Copyright 2023 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//engine/bazel:scql.bzl", "scql_cc_test")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "common",
    srcs = ["common.cc"],
    hdrs = ["common.h"],
    deps = [
        "//engine/framework:exec",
        "@psi//psi/utils:serialize",
        "@spdlog",
    ],
)

cc_library(
    name = "batch_provider",
    srcs = ["batch_provider.cc"],
    hdrs = ["batch_provider.h"],
    deps = [
        ":common",
        "//engine/core:primitive_builder",
        "//engine/core:tensor",
        "//engine/core:tensor_slice",
        "//engine/util:stringify_visitor",
        "//engine/util:tensor_util",
        "@psi//psi/utils:arrow_csv_batch_provider",
        "@psi//psi/utils:batch_provider",
        "@psi//psi/utils:hash_bucket_cache",
        "@yacl//yacl/link",
    ],
)

scql_cc_test(
    name = "batch_provider_test",
    srcs = ["batch_provider_test.cc"],
    deps = [
        ":batch_provider",
    ],
)

cc_library(
    name = "cipher_intersection",
    srcs = ["cipher_intersection.cc"],
    hdrs = ["cipher_intersection.h"],
    deps = [
        ":batch_provider",
        ":common",
        "//engine/core:primitive_builder",
        "//engine/core:tensor",
        "//engine/util:stringify_visitor",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/container:flat_hash_set",
        "@psi//psi/utils:batch_provider",
        "@psi//psi/utils:batch_provider_impl",
        "@psi//psi/utils:ec_point_store",
        "@psi//psi/utils:hash_bucket_cache",
        "@psi//psi/utils:ub_psi_cache",
        "@spdlog",
        "@yacl//yacl/link",
    ],
)

scql_cc_test(
    name = "cipher_intersection_test",
    srcs = ["cipher_intersection_test.cc"],
    deps = [
        ":cipher_intersection",
    ],
)

cc_binary(
    name = "cipher_intersection_bench",
    srcs = ["cipher_intersection_bench.cc"],
    deps = [
        "@google_benchmark//:benchmark_main",
    ] + [
        ":cipher_intersection",
    ],
)

cc_library(
    name = "ub_helper",
    srcs = ["ub_helper.cc"],
    hdrs = ["ub_helper.h"],
    deps = [
        ":batch_provider",
        ":cipher_intersection",
        ":common",
        "@psi//psi/algorithm/ecdh/ub_psi:ecdh_oprf_psi",
        "@psi//psi/utils:batch_provider_impl",
    ],
)

cc_library(
    name = "detail_logger",
    srcs = ["detail_logger.cc"],
    hdrs = ["detail_logger.h"],
    deps = [
        "//engine/core:tensor",
        "//engine/util:logging",
        "//engine/util:spu_io",
        "@psi//psi/algorithm/ecdh:ecdh_logger",
        "@psi//psi/cryptor:ecc_cryptor",
    ],
)
